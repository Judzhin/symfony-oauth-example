league_oauth2_server:
  authorization_server: # Required
    # Full path to the private key file.
    # How to generate a private key: https://oauth2.thephpleague.com/installation/#generating-public-and-private-keys
    # private_key: ~ # Required, Example: /var/oauth/private.key
    private_key: '%kernel.project_dir%/var/oauth/private.key'

    # The plain string or the ascii safe string used to create a Defuse\Crypto\Key to be used as an encryption key.
    # How to generate an encryption key: https://oauth2.thephpleague.com/installation/#string-password
    encryption_key: 'def000008968d911150fb4b1341659ee590e26cd91dd2b0cead366c19637496d704bc2644acd785af0a283cff48ee5765756df2cc4855a3a4ed9fb512a7e299833e329e5' # Required

  resource_server: # Required
    # Full path to the public key file
    # How to generate a public key: https://oauth2.thephpleague.com/installation/#generating-public-and-private-keys
    # public_key: ~ # Required, Example: /var/oauth/public.key
    public_key: '%kernel.project_dir%/var/oauth/public.key'

  scopes:
    # Scopes that you wish to utilize in your application.
    # This should be a simple array of strings.
    available: [ EMAIL ]

    # Scopes that will be assigned when no scope given.
    # This should be a simple array of strings.
    default: [ EMAIL ]

  # Configures different persistence methods that can be used by the bundle for saving client and token data.
  # Only one persistence method can be configured at a time.
  persistence: # Required
    doctrine:
      # Name of the entity manager that you wish to use for managing clients and tokens.
      entity_manager: default