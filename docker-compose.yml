version: '3.5'

services:

  php-fpm:
    container_name: symfony-oauth-example-php-fpm-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/php-fpm/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
        TZ: ${TZ:-Europe/Kiev}
    volumes:
      - ./:/var/www/html:rw
      - ~/.composer:/root/.composer/cache
    networks:
      - symfony-oauth-example

  nginx:
    container_name: symfony-oauth-example-nginx-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/nginx/Dockerfile
      args:
        APP_ENV: ${APP_ENV:-dev}
    volumes:
      - ./:/var/www/html:rw
      - ./var/log/nginx:/var/log/nginx:rw
    ports:
      - ${NGINX_PORT:-8080}:80
    depends_on:
      - php-fpm
    networks:
      - symfony-oauth-example

  mariadb:
    container_name: symfony-oauth-example-mariadb-${APP_ENV:-dev}
    build:
      context: .
      target: ${APP_ENV:-dev}
      dockerfile: .docker/mariadb/Dockerfile
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-symfony.dev}
      MYSQL_USER: ${MYSQL_USER:-symfony}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-XtByqo%asj81CJmM[dfC}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    ports:
      - ${MYSQL_PORT:-9033}:3306
    volumes:
      - symfony-oauth-example-data:/var/lib/mysql
    networks:
      - symfony-oauth-example

  pma:
    image: phpmyadmin/phpmyadmin:latest
    container_name: symfony-oauth-example-pma-${APP_ENV:-dev}
    ports:
      - ${PMA_PORT:-33080}:80
    environment:
      PMA_HOST: ${PMA_HOST:-mariadb}
    depends_on:
      - mariadb
    networks:
      - symfony-oauth-example

  mailer:
    image: mailhog/mailhog
    container_name: symfony-oauth-example-mailer-${APP_ENV:-dev}
    ports:
      - ${MAILHOG_PORT:-8025}:8025
    networks:
      - symfony-oauth-example

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  symfony-oauth-example:
    driver: bridge

volumes:
  symfony-oauth-example-data:
    driver: local
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
